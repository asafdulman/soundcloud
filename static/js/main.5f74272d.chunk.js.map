{"version":3,"sources":["components/Player.jsx","components/RecentSearchItem.jsx","components/RecentSearches.jsx","components/SearchButtons.jsx","assets/img/defaultImg.gif","components/SelectedTrack.jsx","assets/img/backupImg.png","components/SearchItem.jsx","components/TrackList.jsx","constants.jsx","services/trackService.js","components/SearchTrackBox.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Player","trackToPlay","className","dangerouslySetInnerHTML","__html","html","RecentSearchItem","recentSearch","onSearch","onClick","ev","RecentSearches","recentSearches","searches","slice","map","index","SearchButtons","onGetNextResults","onSetTrackListView","SelectedTrack","track","onPlayTrack","src","artwork_url","defaultImg","alt","SearchItem","onSelectTrack","selectedTrack","trackListView","id","title","img","TrackList","tracks","TRACKS_STORAGE_KEY","LIST_TILE_TOGGLE_VIEW","trackService","loadTracks","loadNextTracks","loadSearchesFromStorage","getSongToPlay","loadToggleViewFromStorage","key","view","localStorage","getItem","JSON","parse","saveToggleViewToStorage","setItem","stringify","searchValue","a","addSearchToStorage","window","SC","get","q","limit","linked_partitioning","data","url","oEmbed","auto_play","maxheight","offset","SearchTrackBox","useState","searchBy","setSearchBy","inputRef","useRef","useEffect","current","focus","ref","placeholder","value","onChange","target","type","App","setTracks","setTrackToPlay","setSelectedTrack","selectedTrackImg","setSelectedTrackImg","setOffset","searchTrackBy","setSearchTrackBy","setRecentSearches","setTrackListView","initialize","client_id","preventDefault","length","tracksInfo","collection","permalink_url","trackToEmbed","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f74272d.chunk.js","sourcesContent":["\r\nexport function Player({ trackToPlay }) {\r\n\r\n    return (\r\n        <div className=\"player-box\">\r\n            <div dangerouslySetInnerHTML={{ __html: trackToPlay.html }} />\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport function RecentSearchItem({ recentSearch, onSearch }) {\r\n\r\n    return (\r\n        <div className=\"recent-search-item-box\" onClick={(ev) => onSearch(ev, recentSearch)}>\r\n            <p>{recentSearch}</p>\r\n        </div>\r\n    )\r\n}\r\n","import { RecentSearchItem } from \"./RecentSearchItem\";\r\n\r\nexport function RecentSearches({ recentSearches, onSearch }) {\r\n\r\n    const searches = recentSearches?.slice(0, 5)\r\n\r\n    return (\r\n        <div className=\"recent-searches-box\">\r\n            <h4>Your Recent Searches</h4>\r\n            <div className=\"recent-searches-list-box\">\r\n                {searches?.map((recentSearch, index) => <RecentSearchItem key={index} onSearch={onSearch} recentSearch={recentSearch} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport function SearchButtons({ onGetNextResults, onSetTrackListView }) {\r\n\r\n    return (\r\n        <div className=\"search-btns-box\">\r\n            <button className=\"next-btn\" onClick={() => onGetNextResults()}>Next</button>\r\n            <div className=\"list-tile-box\">\r\n                <button onClick={() => onSetTrackListView('list')}><i className=\"fas list-btn fa-list\"></i></button>\r\n                <button onClick={() => onSetTrackListView('tile')}><i className=\"fas tile-btn fa-border-all\"></i></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/defaultImg.8480bd0e.gif\";","\r\nimport defaultImg from '../assets/img/defaultImg.gif'\r\n\r\nexport function SelectedTrack({ track, onPlayTrack }) {\r\n\r\n    return (\r\n        <div className=\"selected-track-box\">\r\n            <img className=\"selected-track-img\" onClick={() => onPlayTrack(track)} src={track?.artwork_url ? track?.artwork_url : defaultImg} alt=\"img\" />\r\n            <h3>Click To Play Song</h3>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/backupImg.e9cf3555.png\";","import img from '../assets/img/backupImg.png'\r\n\r\n\r\nexport function SearchItem({ track, onSelectTrack, selectedTrack, trackListView }) {\r\n    return (\r\n        <div className={selectedTrack?.id === track.id ? 'search-item-box-active' : 'search-item-box'} onClick={() => onSelectTrack(track)}>\r\n            {trackListView === 'list' ? <p>{track.title}</p> : <img src={track.artwork_url ? track.artwork_url : img} alt=\"\" />}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { SearchItem } from './SearchItem'\r\n\r\nexport function TrackList({ tracks, onSelectTrack, selectedTrack, trackListView }) {\r\n    return (\r\n        <div className={trackListView === 'list' ? 'track-list-box' : 'track-tile-box'}>\r\n            {tracks?.map(track => <SearchItem key={track.id} track={track} selectedTrack={selectedTrack} onSelectTrack={onSelectTrack} trackListView={trackListView} />)}\r\n        </div>\r\n    )\r\n}\r\n","export const TRACKS_STORAGE_KEY = 'recentSearches'\r\nexport const LIST_TILE_TOGGLE_VIEW = 'toggleViewList'","import {\r\n    TRACKS_STORAGE_KEY\r\n} from \"../constants\";\r\n\r\nexport const trackService = {\r\n    loadTracks,\r\n    loadNextTracks,\r\n    loadSearchesFromStorage,\r\n    getSongToPlay,\r\n    loadToggleViewFromStorage,\r\n    saveToggleViewToStorage\r\n}\r\n\r\nasync function loadTracks(searchValue) {\r\n    addSearchToStorage(TRACKS_STORAGE_KEY, searchValue)\r\n    const data = await window.SC.get('/tracks', {\r\n        q: searchValue,\r\n        limit: 6,\r\n        linked_partitioning: 1\r\n    })\r\n    return data\r\n}\r\n\r\nasync function getSongToPlay(url) {\r\n    const data = await window.SC.oEmbed(url, {\r\n        auto_play: true,\r\n        maxheight: 200\r\n    })\r\n    return data\r\n}\r\n\r\nasync function loadNextTracks(searchValue, offset) {\r\n    const data = await window.SC.get('/tracks', {\r\n        q: searchValue,\r\n        limit: 6,\r\n        linked_partitioning: 1,\r\n        offset\r\n    })\r\n    return data\r\n}\r\n\r\nfunction addSearchToStorage(key, searchValue) {\r\n    let searches = loadSearchesFromStorage(TRACKS_STORAGE_KEY) ? loadSearchesFromStorage(TRACKS_STORAGE_KEY) : []\r\n    searches = [searchValue, ...searches]\r\n    localStorage.setItem(key, JSON.stringify(searches))\r\n}\r\n\r\nfunction loadSearchesFromStorage(key) {\r\n    const recentSearches = localStorage.getItem(key)\r\n    return recentSearches ? JSON.parse(recentSearches) : []\r\n}\r\n\r\nfunction saveToggleViewToStorage(key, view) {\r\n    localStorage.setItem(key, JSON.stringify(view))\r\n}\r\n\r\nfunction loadToggleViewFromStorage(key) {\r\n    const view = localStorage.getItem(key)\r\n    return JSON.parse(view)\r\n}","import { useEffect, useRef, useState } from \"react\"\r\n\r\nexport function SearchTrackBox({ onSearch }) {\r\n\r\n    const [searchBy, setSearchBy] = useState('')\r\n    const inputRef = useRef()\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus()\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"search-track-box\">\r\n                <input ref={inputRef} placeholder=\"Search track, artist, or set\" value={searchBy} onChange={(ev) => setSearchBy(ev.target.value)} type=\"text\" />\r\n                <button onClick={(ev) => onSearch(ev, searchBy)}><i className=\"fab soundcloud-icon fa-soundcloud\"></i></button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport { Player } from './components/Player';\nimport { RecentSearches } from './components/RecentSearches';\nimport { SearchButtons } from './components/SearchButtons';\nimport { SelectedTrack } from './components/SelectedTrack';\nimport { TrackList } from './components/TrackList';\nimport { LIST_TILE_TOGGLE_VIEW, TRACKS_STORAGE_KEY } from './constants';\nimport { trackService } from './services/trackService';\nimport './assets/scss/global.scss'\nimport { SearchTrackBox } from './components/SearchTrackBox';\n\n\nfunction App() {\n\n  const [tracks, setTracks] = useState()\n  const [trackToPlay, setTrackToPlay] = useState()\n  const [selectedTrack, setSelectedTrack] = useState()\n  const [selectedTrackImg, setSelectedTrackImg] = useState()\n  const [offset, setOffset] = useState(6)\n  const [searchTrackBy, setSearchTrackBy] = useState()\n  const [recentSearches, setRecentSearches] = useState([])\n  const [trackListView, setTrackListView] = useState()\n\n  useEffect(() => {\n    window.SC.initialize({\n      client_id: 'ggX0UomnLs0VmW7qZnCzw'\n    });\n    setRecentSearches(trackService.loadSearchesFromStorage(TRACKS_STORAGE_KEY))\n    setTrackListView(trackService.loadToggleViewFromStorage(LIST_TILE_TOGGLE_VIEW))\n  }, [])\n\n\n  const onSearch = async (ev, searchBy) => {\n    ev.preventDefault()\n    if (!searchBy) return;\n    setSearchTrackBy(searchBy)\n    recentSearches.length ? setRecentSearches([searchBy, ...recentSearches]) : setRecentSearches([searchBy])\n    const tracksInfo = await trackService.loadTracks(searchBy)\n    setTracks(tracksInfo.collection)\n  }\n\n  const onGetNextResults = async () => {\n    setOffset(offset + 6)\n    const tracksInfo = await trackService.loadNextTracks(searchTrackBy, offset)\n    setTracks(tracksInfo.collection)\n  }\n\n  const onSelectTrack = (track) => {\n    setSelectedTrack(track)\n    setTimeout(() => {\n      setSelectedTrackImg(track)\n    }, 2000)\n  }\n\n  const onPlayTrack = async (track) => {\n    const trackToEmbed = await trackService.getSongToPlay(track.permalink_url)\n    setTrackToPlay(trackToEmbed)\n  }\n\n  const onSetTrackListView = (view) => {\n    trackService.saveToggleViewToStorage(LIST_TILE_TOGGLE_VIEW, view)\n    setTrackListView(view)\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"main-container\">\n        <div className=\"search-container\">\n          <SearchTrackBox onSearch={onSearch} />\n          <TrackList tracks={tracks} onSelectTrack={onSelectTrack} selectedTrack={selectedTrack} trackListView={trackListView} />\n          <SearchButtons onGetNextResults={onGetNextResults} onSetTrackListView={onSetTrackListView} />\n        </div>\n        <div className=\"selected-track-container\">\n          {selectedTrackImg ? <SelectedTrack track={selectedTrackImg} onPlayTrack={onPlayTrack} /> :\n            <h1 className=\"waiting-heading\">Waiting For a Tune...</h1>}\n          {trackToPlay && <Player trackToPlay={trackToPlay} />}\n        </div>\n          <RecentSearches recentSearches={recentSearches} onSearch={onSearch} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}